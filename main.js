(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._headers=e.headers}var n,r;return n=t,(r=[{key:"_check",value:function(e){return e.ok?e.json():Promise.reject("Извините произошла ошибка")}},{key:"getUserData",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._check)}},{key:"getAllCard",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._check)}},{key:"postNewCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._check)}},{key:"patchDataUser",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._check)}},{key:"patchAvatarUser",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._check)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._check)}},{key:"likeCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e._id,"/likes"),{method:"PUT",headers:this._headers,body:JSON.stringify(e)}).then(this._check)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e._id,"/likes"),{method:"DELETE",headers:this._headers}).then(this._check)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r,o,i,c=function(){function e(t,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._idUser=n,this._data=t,this._handleCardClick=r,this._colbackLikeActive=o,this._colbackLikeDelete=i,this._cloneCard=e._templateCard.querySelector(".card").cloneNode(!0),this._plaseImg=this._cloneCard.querySelector(".card__image"),this._likeButton=this._cloneCard.querySelector(".card__like-button"),this._placeTitle=this._cloneCard.querySelector(".card__title"),this._cardLikeCounter=this._cloneCard.querySelector(".card__like-counter")}var t,r;return t=e,(r=[{key:"test",value:function(){var e=this;return this._data.likes.some((function(t){return t._id===e._idUser}))}},{key:"checkLikeStatus",value:function(){this.test()&&this._addlike()}},{key:"checkLikeCounter",value:function(e){this._cardLikeCounter.innerText=e.likes.length}},{key:"createCard",value:function(){return this._plaseImg.src=this._data.link,this._plaseImg.alt=this._data.name,this._placeTitle.textContent=this._data.name,this._setEventListeners(),this._cloneCard}},{key:"_setEventListeners",value:function(){var e=this;this._plaseImg.addEventListener("click",(function(){e._handleCardClick()})),this._likeButton.addEventListener("click",(function(){e.test()?(e._colbackLikeDelete(e._data),e._toggleLike()):(e._colbackLikeActive(e._data),e._toggleLike())}))}},{key:"_addlike",value:function(){this._likeButton.classList.add("card__like-button_active")}},{key:"_toggleLike",value:function(){this._likeButton.classList.toggle("card__like-button_active"),this.checkLikeCounter}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=s(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},l.apply(this,arguments)}function s(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}r=c,o="_templateCard",i=document.querySelector("#template-card").content,o in r?Object.defineProperty(r,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):r[o]=i;var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function c(e,t,n,r,o,u){var a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(a=i.call(this,e,t,n,r,o))._colbackDeleteCard=u,a._cloneCard=c._templateCard.querySelector(".card").cloneNode(!0),a._placeTitle=a._cloneCard.querySelector(".card__title"),a._plaseImg=a._cloneCard.querySelector(".card__image"),a._likeButton=a._cloneCard.querySelector(".card__like-button"),a._cardLikeCounter=a._cloneCard.querySelector(".card__like-counter"),a._deleteButton=a._cloneCard.querySelector(".card__delete-button"),a}return t=c,(n=[{key:"_setEventListeners",value:function(){var e=this;l(h(c.prototype),"_setEventListeners",this).call(this),this._deleteButton.addEventListener("click",(function(){e._colbackDeleteCard({id:e._idCard,cloneCard:e._cloneCard})}))}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(c);function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}!function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(d,"_templateCard",document.querySelector("#template-userCard").content);var _=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._selector=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItems",value:function(e){this._selector.append(e)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),v(this,"_toggleButtonState",(function(){r._hasInvalidInput()?r._inactiveSubmitButton():r._activeSubmitButton()})),v(this,"resetValidation",(function(){r._toggleButtonState(),r._inputList.forEach((function(e){r._hideInputError(e)}))})),this._listSelector=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._listSelector.inputSelector)),this._submitButton=this._formElement.querySelector(this._listSelector.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){this._inputError=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._listSelector.inputErrorClass),this._inputError.textContent=t}},{key:"_hideInputError",value:function(e){this._inputError=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._listSelector.inputErrorClass),this._inputError.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_inactiveSubmitButton",value:function(){this._submitButton.classList.add(this._listSelector.inactiveButtonClass),this._submitButton.setAttribute("disabled","disabled")}},{key:"_activeSubmitButton",value:function(){this._submitButton.classList.remove(this._listSelector.inactiveButtonClass),this._submitButton.removeAttribute("disabled")}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState(t)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var w=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),g(this,"_closeByClick",(function(e){e.target.closest(".popup-content")||n.close()})),g(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),this._popupSelector=t,this._closeButton=this._popupSelector.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popupSelector.addEventListener("click",this._closeByClick)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}function q(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function c(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),i.call(this,e)}return t=c,(n=[{key:"open",value:function(e){E(P(c.prototype),"open",this).call(this),c.fullScrin.src=e.link,c.fullScrin.alt=e.name,c.fullScrinTitle.textContent=e.name}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(w);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=D(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(this,arguments)}function D(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}function x(e,t){return x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},x(e,t)}function U(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return A(e)}function A(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}q(B,"fullScrin",document.querySelector(".popup__max-img")),q(B,"fullScrinTitle",document.querySelector(".popup__max-img-title"));var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return U(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(A(n=i.call(this,e)),"_getInputValues",(function(){return n.valueList={},n._inputList.forEach((function(e){n.valueList[e.name]=e.value})),n.valueList})),n._submitFormСolback=t,n._textButton=n._popupSelector.querySelector(".submit-button"),n._textButtonDefault=n._textButton.innerText,n._formElement=n._popupSelector.querySelector(".form"),n._inputList=Array.from(n._formElement.querySelectorAll(".form__input")),n}return t=c,(n=[{key:"showDownloadMessage",value:function(e){this._textButton.innerText=e?"Сохранение...":this._textButtonDefault}},{key:"setEventListeners",value:function(){var e=this;T(V(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.showDownloadMessage(!0),e._submitFormСolback(e._getInputValues())}))}},{key:"close",value:function(){T(V(c.prototype),"close",this).call(this),this._formElement.reset()}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(w);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nickName=document.querySelector(t),this._aboutMe=document.querySelector(n),this._userInfo={}}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(t){this._nickName.textContent=t.name,this._aboutMe.textContent=t.about,e.avatar.src=t.avatar,this._userInfo=t}},{key:"getUserInfo",value:function(){return this._userInfo}},{key:"getIdUser",value:function(){return this._userInfo._id}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=z(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},H.apply(this,arguments)}function z(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=X(e)););return e}function K(e,t){return K=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},K(e,t)}function Q(e,t){if(t&&("object"===F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return W(e)}function W(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function X(e){return X=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},X(e)}!function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(J,"avatar",document.querySelector(".profile__avatar"));var Y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=X(r);if(o){var n=X(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Q(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(W(n=i.call(this,e)),"_deleteCard",(function(){n._dataCard.cloneCard.remove(),n._dataCard.cloneCard=null})),n._dataCard={},n._colbackDeleteCard=t,n._closeButton=n._popupSelector.querySelector(".popup__close-button"),n._formElement=n._popupSelector.querySelector(".form"),n}return t=c,(n=[{key:"open",value:function(e){return this._dataCard={id:e.id,cloneCard:e.cloneCard},H(X(c.prototype),"open",this).call(this),this._dataCard}},{key:"setEventListeners",value:function(){var e=this;H(X(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.showDownloadMessage(!0),e._colbackDeleteCard(e._dataCard.id,e._deleteCard)}))}}])&&G(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(M),Z={inputSelector:".form__input",submitButtonSelector:".submit-button",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error"},$=document.querySelector("#avatar"),ee=document.querySelector("#profile"),te=document.querySelector("#create-card"),ne=document.querySelector("#delete-card"),re=document.querySelector(".popup_type_max-img"),oe=document.querySelector("#avatar-input"),ie=document.querySelector("#about-me-input"),ce=document.querySelector("#name-input"),ue=document.querySelector(".profile__add-photo"),ae=document.querySelector(".profile__edit-avatar"),le=document.querySelector(".profile__edit"),se=document.querySelector("#form-create"),fe=document.querySelector("#profile-edit"),pe=document.querySelector("#cheng-avatar"),he=document.querySelector("#card-list");function de(e){ke.open(e)}function ye(e){var t=me.getIdUser();if(e.owner._id===t){var n=new d(e,t,(function(){return ge.open(e)}),(function(){return _e(e,n.checkLikeCounter)}),(function(){return be(e,n.checkLikeCounter)}),de);return console.log(n.test()),n.checkLikeStatus(),n.checkLikeCounter(e),n.createCard()}var r=new c(e,t,(function(){return ge.open(e)}),(function(){return _e(e,r.checkLikeCounter)}),(function(){return be(e,r.checkLikeCounter)}));return console.log(r.test()),r.checkLikeStatus(),r.checkLikeCounter(e),r.createCard()}function _e(e,t){ve.likeCard(e).then((function(e){t(e)})).catch((function(e){return console.log(e)}))}function be(e,t){ve.deleteLike(e).then((function(e){t(e)})).catch((function(e){return console.log(e)}))}var ve=new t({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"9f932bbc-acd7-4dae-8249-c98552659f56","content-type":"application/json"}}),me=new J(".profile__nick-name",".profile__profession"),ke=new Y(ne,(function(e,t){ve.deleteCard(e).then((function(){ke.close()})).catch((function(e){return console.log(e)})).finally((function(){return ke.showDownloadMessage(!1)}))})),ge=new B(re),we=new m(Z,pe),Se=new m(Z,fe),Oe=new m(Z,se),Ee=new M(ee,(function(e){ve.patchDataUser(e).then((function(e){me.getUserInfo(),me.setUserInfo(e),Ee.close()})).catch((function(e){return console.log(e)})).finally((function(){return Ee.showDownloadMessage(!1)}))})),Ce=new M(te,(function(e){ve.postNewCard(e).then((function(e){!function(e){he.prepend(ye(e))}(e),Ce.close()})).catch((function(e){return console.log(e)})).finally((function(){return Ce.showDownloadMessage(!1)}))})),Le=new M($,(function(e){ve.patchAvatarUser(e).then((function(e){me.getUserInfo(),me.setUserInfo(e),Le.close()})).catch((function(e){console.log(e)})).finally((function(){return Le.shshowDownloadMessage(!1)}))}));we.enableValidation(),Se.enableValidation(),Oe.enableValidation(),ue.addEventListener("click",(function(){Ce.open(),Oe.resetValidation()})),le.addEventListener("click",(function(){return e=me.getUserInfo(),ce.value=e.name,ie.value=e.about,Ee.open(),void Se.resetValidation();var e})),ae.addEventListener("click",(function(){return e=me.getUserInfo(),oe.value=e.avatar,void Le.open();var e})),ke.setEventListeners(),ge.setEventListeners(),Ee.setEventListeners(),Le.setEventListeners(),Ce.setEventListeners(),ve.getAllCard().then((function(e){var t=new _({items:e,renderer:function(e){t.addItems(ye(e))}},he);t.renderItems()})).catch((function(e){console.log(e)})),ve.getUserData().then((function(e){me.setUserInfo(e)})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,