(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e.url,this._headers=e.headers}var n,r;return n=t,(r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Извините произошла ошибка")}},{key:"_getUserData",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"_getAllCard",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"getAllData",value:function(){return Promise.all([this._getAllCard(),this._getUserData()])}},{key:"postNewCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"patchDataUser",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}},{key:"patchAvatarUser",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"likeCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e._id,"/likes"),{method:"PUT",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e._id,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r,o,i,a,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=n,this._idUser=r,this._handleCardClick=o,this._handleLikeActive=i,this._handleLikeDelete=a,this._handleDeleteCard=u,this._cloneCard=this._getCloneCard(t),this._plaseImg=this._cloneCard.querySelector(".card__image"),this._likeButton=this._cloneCard.querySelector(".card__like-button"),this._placeTitle=this._cloneCard.querySelector(".card__title"),this._cardLikeCounter=this._cloneCard.querySelector(".card__like-counter"),this._deleteButton=this._cloneCard.querySelector(".card__delete-button")}var t,r;return t=e,(r=[{key:"_getCloneCard",value:function(e){return document.querySelector(e).content.querySelector(".card").cloneNode(!0)}},{key:"_isLiked",value:function(){var e=this;return this._data.likes.some((function(t){return t._id===e._idUser}))}},{key:"_setLikeStatus",value:function(){this._isLiked()&&this._addlike()}},{key:"checkLikeCounter",value:function(e){this._cardLikeCounter.textContent=e.likes.length}},{key:"changeDataLikeCounter",value:function(e){this._data.likes=e.likes}},{key:"createCard",value:function(){var e=this;return this._data.owner._id===this._idUser&&(this._deleteButton.classList.add("card__delete-button_show"),this._deleteButton.addEventListener("click",(function(){e._handleDeleteCard({id:e._data._id,cloneCard:e._cloneCard})}))),this._plaseImg.src=this._data.link,this._plaseImg.alt=this._data.name,this._placeTitle.textContent=this._data.name,this._setEventListeners(),this._setLikeStatus(),this.checkLikeCounter(this._data),this._cloneCard}},{key:"_setEventListeners",value:function(){var e=this;this._plaseImg.addEventListener("click",(function(){e._handleCardClick()})),this._likeButton.addEventListener("click",(function(){e._isLiked()?e._handleLikeDelete(e._data):e._handleLikeActive(e._data)}))}},{key:"_addlike",value:function(){this._likeButton.classList.add("card__like-button_active")}},{key:"toggleLike",value:function(){this._likeButton.classList.toggle("card__like-button_active")}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=[],this._renderer=t,this._container=n}var t,n;return t=e,(n=[{key:"setItems",value:function(e){this._items=e}},{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"prependItems",value:function(e){this._container.prepend(e)}},{key:"appendItems",value:function(e){this._container.append(e)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"_toggleButtonState",(function(){r._hasInvalidInput()?r._disableSubmitButton():r._enableSubmitButton()})),u(this,"resetValidation",(function(){r._toggleButtonState(),r._inputList.forEach((function(e){r._hideInputError(e)}))})),this._listSelector=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._listSelector.inputSelector)),this._submitButton=this._formElement.querySelector(this._listSelector.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){this._inputError=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(this._listSelector.inputErrorClass),this._inputError.textContent=t}},{key:"_hideInputError",value:function(e){this._inputError=this._formElement.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._listSelector.inputErrorClass),this._inputError.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_disableSubmitButton",value:function(){this._submitButton.classList.add(this._listSelector.inactiveButtonClass),this._submitButton.setAttribute("disabled","disabled")}},{key:"_enableSubmitButton",value:function(){this._submitButton.classList.remove(this._listSelector.inactiveButtonClass),this._submitButton.removeAttribute("disabled")}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState(t)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var f=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),s(this,"_closeByClick",(function(e){e.target.closest(".popup-content")||n.close()})),s(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__close-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("mousedown",this._closeByClick)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=y(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},d.apply(this,arguments)}function y(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}function _(e,t){return _=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},_(e,t)}function v(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function b(e){return b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},b(e)}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e){d(b(a.prototype),"open",this).call(this),a.fullScrin.src=e.link,a.fullScrin.alt=e.name,a.fullScrinTitle.textContent=e.name}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}function C(e,t){return C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},C(e,t)}function L(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}m(g,"fullScrin",document.querySelector(".popup__max-img")),m(g,"fullScrinTitle",document.querySelector(".popup__max-img-title"));var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._hendleFormCallBack=t,n._textButton=n._popup.querySelector(".submit-button"),n._textButtonDefault=n._textButton.textContent,n._formElement=n._popup.querySelector(".form"),n._inputList=Array.from(n._formElement.querySelectorAll(".form__input")),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this.valueList={},this._inputList.forEach((function(t){e.valueList[t.name]=t.value})),this.valueList}},{key:"showLoadingMessage",value:function(e){this._textButton.innerText=e?"Сохранение...":this._textButtonDefault}},{key:"setEventListeners",value:function(){var e=this;S(O(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault();var n=e._getInputValues();e.showLoadingMessage(!0),e._hendleFormCallBack(n)}))}},{key:"close",value:function(){S(O(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B,I,R,q=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nickName=document.querySelector(t),this._aboutMe=document.querySelector(n),this._userInfo={}}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(t){this._nickName.textContent=t.name,this._aboutMe.textContent=t.about,e.avatar.src=t.avatar,this._userInfo=t}},{key:"getUserInfo",value:function(){return this._userInfo}},{key:"getIdUser",value:function(){return this._userInfo._id}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=A(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},T.apply(this,arguments)}function A(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}function U(e,t){return U=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},U(e,t)}function M(e,t){if(t&&("object"===x(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return V(e)}function V(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}B=q,I="avatar",R=document.querySelector(".profile__avatar"),I in B?Object.defineProperty(B,I,{value:R,enumerable:!0,configurable:!0,writable:!0}):B[I]=R;var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return M(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(V(n=i.call(this,e)),"deleteCard",(function(){n._dataCard.cloneCard.remove(),n._dataCard.cloneCard=null})),n._dataCard={},n._handleDeleteCard=t,n._textButton=n._popup.querySelector(".submit-button"),n._textButtonDefault=n._textButton.textContent,n._closeButton=n._popup.querySelector(".popup__close-button"),n._formElement=n._popup.querySelector(".form"),n}return t=a,(n=[{key:"open",value:function(e){return this._dataCard={id:e.id,cloneCard:e.cloneCard},T(N(a.prototype),"open",this).call(this),this._dataCard}},{key:"showLoadingMessage",value:function(e){this._textButton.innerText=e?"Удаление...":this._textButtonDefault}},{key:"setEventListeners",value:function(){var e=this;T(N(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.showLoadingMessage(!0),e._handleDeleteCard(e._dataCard.id)}))}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f),F={inputSelector:".form__input",submitButtonSelector:".submit-button",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error"},G=(document.querySelector("#avatar-input"),document.querySelector("#about-input")),H=document.querySelector("#name-input"),z=document.querySelector(".profile__add-photo"),$=document.querySelector(".profile__edit-avatar"),K=document.querySelector(".profile__edit"),Q=document.querySelector("#form-create"),W=document.querySelector("#profile-edit"),X=document.querySelector("#cheng-avatar"),Y=document.querySelector("#card-list");function Z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ee=function(e){var t=re.getIdUser(),n=new r("#template-сard",e,t,(function(){return ie.open(e)}),(function(e){te.likeCard(e).then((function(e){n.changeDataLikeCounter(e),n.checkLikeCounter(e),n.toggleLike()})).catch((function(e){return console.log(e)}))}),(function(e){te.deleteLike(e).then((function(e){n.changeDataLikeCounter(e),n.checkLikeCounter(e),n.toggleLike()})).catch((function(e){return console.log(e)}))}),(function(e){oe.open(e)}));return n.createCard()},te=new t({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"9f932bbc-acd7-4dae-8249-c98552659f56","content-type":"application/json"}}),ne=new i((function(e){return ne.appendItems(ee(e))}),Y),re=new q(".profile__nick-name",".profile__profession"),oe=new J("#delete-card",(function(e){te.deleteCard(e).then((function(e){oe.deleteCard(),ne.setItems(e),oe.close()})).catch((function(e){return console.log(e)})).finally((function(){return oe.showLoadingMessage(!1)}))})),ie=new g(".popup_type_max-img"),ae=new c(F,X),ue=new c(F,W),ce=new c(F,Q),le=new j("#profile",(function(e){te.patchDataUser(e).then((function(e){re.getUserInfo(),re.setUserInfo(e),le.close()})).catch((function(e){return console.log(e)})).finally((function(){return le.showLoadingMessage(!1)}))})),se=new j("#create-card",(function(e){te.postNewCard(e).then((function(e){ne.prependItems(ee(e)),se.close()})).catch((function(e){return console.log(e)})).finally((function(){return se.showLoadingMessage(!1)}))})),fe=new j("#avatar",(function(e){te.patchAvatarUser(e).then((function(e){re.getUserInfo(),re.setUserInfo(e),fe.close()})).catch((function(e){console.log(e)})).finally((function(){return fe.showLoadingMessage(!1)}))}));ae.enableValidation(),ue.enableValidation(),ce.enableValidation(),z.addEventListener("click",(function(){se.open(),ce.resetValidation()})),K.addEventListener("click",(function(){var e=re.getUserInfo();H.value=e.name,G.value=e.about,le.open(),ue.resetValidation()})),$.addEventListener("click",(function(){fe.open(),ae.resetValidation()})),oe.setEventListeners(),ie.setEventListeners(),le.setEventListeners(),fe.setEventListeners(),se.setEventListeners(),te.getAllData().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return Z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Z(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ne.setItems(o),re.setUserInfo(i),ne.renderItems()})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QTZCQSxJLGd4QkFBdEI2TCxFQUFQLEtBQWlCQyxFQUFqQixLQUNBdEIsR0FBUUcsU0FBU2tCLEdBQ2pCdEMsR0FBUzRCLFlBQVlXLEdBQ3JCdEIsR0FBUXVCLGlCQUVUL0IsT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFJRixPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUG9wdXBEZWxldGUuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9jb25zdGFudHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcclxuICAgICAgICB0aGlzLl91cmwgPSBjb25maWcudXJsO1xyXG4gICAgICAgIHRoaXMuX2hlYWRlcnMgPSBjb25maWcuaGVhZGVycztcclxuICAgIH1cclxuICAgIF9jaGVja1Jlc3BvbnNlKHJlcyl7XHJcbiAgICAgICAgaWYocmVzLm9rKXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ9CY0LfQstC40L3QuNGC0LUg0L/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsCcpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgX2dldFVzZXJEYXRhKCkge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgICB9XHJcbiAgICBfZ2V0QWxsQ2FyZCgpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG4gICAgZ2V0QWxsRGF0YSgpIHtcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuX2dldEFsbENhcmQoKSwgdGhpcy5fZ2V0VXNlckRhdGEoKV0pXHJcbiAgICB9XHJcbiAgICBwb3N0TmV3Q2FyZChkYXRhKXtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpXHJcbiAgICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuICAgIHBhdGNoRGF0YVVzZXIoZGF0YSl7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgICAgICAgICAgYWJvdXQ6IGRhdGEuYWJvdXRcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhdGNoQXZhdGFyVXNlcihkYXRhKXtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgYXZhdGFyOiBkYXRhLmF2YXRhclxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGRlbGV0ZUNhcmQoaWQpe1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl91cmx9L2NhcmRzLyR7aWR9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgbGlrZUNhcmQoZGF0YSl7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX3VybH0vY2FyZHMvJHtkYXRhLl9pZH0vbGlrZXNgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpXHJcbiAgICAgICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICBkZWxldGVMaWtlKGRhdGEpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fdXJsfS9jYXJkcy8ke2RhdGEuX2lkfS9saWtlc2AsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZUNhcmRTZWxlY3RvciwgZGF0YSwgaWRVc2VyLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZUxpa2VBY3RpdmUsIGhhbmRsZUxpa2VEZWxldGUsIGhhbmRsZURlbGV0ZUNhcmQpIHtcclxuICAgICAgICB0aGlzLl9kYXRhID0gZGF0YTtcclxuICAgICAgICB0aGlzLl9pZFVzZXIgPSBpZFVzZXI7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VBY3RpdmUgPSBoYW5kbGVMaWtlQWN0aXZlO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VEZWxldGUgPSBoYW5kbGVMaWtlRGVsZXRlO1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQgPSBoYW5kbGVEZWxldGVDYXJkO1xyXG4gICAgICAgIHRoaXMuX2Nsb25lQ2FyZCA9IHRoaXMuX2dldENsb25lQ2FyZCh0ZW1wbGF0ZUNhcmRTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fcGxhc2VJbWcgPSB0aGlzLl9jbG9uZUNhcmQucXVlcnlTZWxlY3RvcignLmNhcmRfX2ltYWdlJyk7XHJcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2Nsb25lQ2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1idXR0b24nKTtcclxuICAgICAgICB0aGlzLl9wbGFjZVRpdGxlID0gdGhpcy5fY2xvbmVDYXJkLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX190aXRsZScpO1xyXG4gICAgICAgIHRoaXMuX2NhcmRMaWtlQ291bnRlciA9IHRoaXMuX2Nsb25lQ2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1jb3VudGVyJyk7XHJcbiAgICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fY2xvbmVDYXJkLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19kZWxldGUtYnV0dG9uJyk7XHJcbiAgICB9O1xyXG4gICAgX2dldENsb25lQ2FyZCAoc2VsZWN0b3IpIHtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikuY29udGVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZCcpLmNsb25lTm9kZSh0cnVlKTtcclxuICAgIH1cclxuICAgIF9pc0xpa2VkKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhLmxpa2VzLnNvbWUoKGVsKSA9PiBlbC5faWQgPT09IHRoaXMuX2lkVXNlcik7XHJcbiAgICB9XHJcbiAgICBfc2V0TGlrZVN0YXR1cygpIHtcclxuICAgICAgICBpZih0aGlzLl9pc0xpa2VkKCkpe1xyXG4gICAgICAgICAgICB0aGlzLl9hZGRsaWtlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgY2hlY2tMaWtlQ291bnRlcihkYXRhKSB7XHJcbiAgICAgICAgdGhpcy5fY2FyZExpa2VDb3VudGVyLnRleHRDb250ZW50ID0gZGF0YS5saWtlcy5sZW5ndGg7XHJcbiAgICB9XHJcbiAgICBjaGFuZ2VEYXRhTGlrZUNvdW50ZXIoZGF0YSkge1xyXG4gICAgICAgIHRoaXMuX2RhdGEubGlrZXMgPSBkYXRhLmxpa2VzO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQ2FyZCAoKSB7XHJcbiAgICAgICAgaWYodGhpcy5fZGF0YS5vd25lci5faWQgPT09IHRoaXMuX2lkVXNlcikge1xyXG4gICAgICAgICAgICB0aGlzLl9kZWxldGVCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2FyZF9fZGVsZXRlLWJ1dHRvbl9zaG93Jyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHsgXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKHtpZDogdGhpcy5fZGF0YS5faWQsIGNsb25lQ2FyZDogdGhpcy5fY2xvbmVDYXJkfSkgXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9wbGFzZUltZy5zcmMgPSB0aGlzLl9kYXRhLmxpbms7XHJcbiAgICAgICAgdGhpcy5fcGxhc2VJbWcuYWx0ID0gdGhpcy5fZGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX3BsYWNlVGl0bGUudGV4dENvbnRlbnQgPSB0aGlzLl9kYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLl9zZXRMaWtlU3RhdHVzKCk7XHJcbiAgICAgICAgdGhpcy5jaGVja0xpa2VDb3VudGVyKHRoaXMuX2RhdGEpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jbG9uZUNhcmQ7XHJcbiAgICB9O1xyXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX3BsYXNlSW1nLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2soKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZighdGhpcy5faXNMaWtlZCgpKXtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlTGlrZUFjdGl2ZSh0aGlzLl9kYXRhKTtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlTGlrZURlbGV0ZSh0aGlzLl9kYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBfYWRkbGlrZSgpIHtcclxuICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xyXG4gICAgfTtcclxuICAgIHRvZ2dsZUxpa2UoKSB7XHJcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmUnKTtcclxuICAgIH07XHJcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IgKHJlbmRlcmVyLCBjb250YWluZXIpe1xyXG4gICAgdGhpcy5faXRlbXMgPSBbXTtcclxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXI7XHJcbiAgfTtcclxuICBzZXRJdGVtcyhkYXRhKXtcclxuICAgIHRoaXMuX2l0ZW1zID0gZGF0YVxyXG4gIH1cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGVsKSA9PiB0aGlzLl9yZW5kZXJlcihlbCkpO1xyXG4gIH07XHJcbiAgcHJlcGVuZEl0ZW1zKGVsKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbClcclxuICB9O1xyXG4gIGFwcGVuZEl0ZW1zKGVsKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGVsKVxyXG4gIH07XHJcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IobGlzdFNlbGVjdG9yLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5fbGlzdFNlbGVjdG9yID0gbGlzdFNlbGVjdG9yXHJcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fbGlzdFNlbGVjdG9yLmlucHV0U2VsZWN0b3IpKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fbGlzdFNlbGVjdG9yLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICB9O1xyXG4gIF9pc1ZhbGlkIChpbnB1dEVsZW1lbnQpIHtcclxuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9XHJcbiAgfTtcclxuICBfc2hvd0lucHV0RXJyb3IgKGlucHV0RWxlbWVudCwgZXJyb3JNYXNhZ2UpIHtcclxuICAgIHRoaXMuX2lucHV0RXJyb3IgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9saXN0U2VsZWN0b3IuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIHRoaXMuX2lucHV0RXJyb3IudGV4dENvbnRlbnQgPSBlcnJvck1hc2FnZTtcclxuICB9O1xyXG4gIF9oaWRlSW5wdXRFcnJvciAoaW5wdXRFbGVtZW50KXtcclxuICAgIHRoaXMuX2lucHV0RXJyb3IgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9saXN0U2VsZWN0b3IuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgIHRoaXMuX2lucHV0RXJyb3IudGV4dENvbnRlbnQgPSAnJztcclxuICB9O1xyXG4gIF9oYXNJbnZhbGlkSW5wdXQgKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xyXG4gICAgfSlcclxuICB9O1xyXG4gIF9kaXNhYmxlU3VibWl0QnV0dG9uICgpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2xpc3RTZWxlY3Rvci5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XHJcbiAgfTtcclxuICBfZW5hYmxlU3VibWl0QnV0dG9uICgpe1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fbGlzdFNlbGVjdG9yLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcclxuICB9O1xyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSA9ICgpID0+IHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9kaXNhYmxlU3VibWl0QnV0dG9uICgpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9lbmFibGVTdWJtaXRCdXR0b24gKClcclxuICAgIH1cclxuICB9O1xyXG4gIF9zZXRFdmVudExpc3RlbmVycyAoKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2lzVmFsaWQoaW5wdXRFbGVtZW50KVxyXG4gICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSk7XHJcbiAgfSk7XHJcbiAgfTtcclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT57XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfTtcclxuICByZXNldFZhbGlkYXRpb24gPSAoKSA9PiB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvciAoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxufTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IgKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2Nsb3NlQnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19jbG9zZS1idXR0b24nKTtcclxuICB9XHJcblxyXG4gIF9jbG9zZUJ5Q2xpY2sgPSAoZWwpID0+IHtcclxuICAgIGlmICghZWwudGFyZ2V0LmNsb3Nlc3QoJy5wb3B1cC1jb250ZW50Jykpe1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gIH1cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZXZ0KSA9PiB7XHJcbiAgICBpZihldnQua2V5ID09PSAnRXNjYXBlJyl7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gIH1cclxuICB9XHJcbiAgb3BlbigpIHtcclxuICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XHJcbiAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gIH1cclxuICBzZXRFdmVudExpc3RlbmVycygpe1xyXG4gICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpID0+e1xyXG4gICAgICB0aGlzLmNsb3NlKClcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5fY2xvc2VCeUNsaWNrKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIHN0YXRpYyBmdWxsU2NyaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX21heC1pbWcnKTtcclxuICBzdGF0aWMgZnVsbFNjcmluVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX21heC1pbWctdGl0bGUnKTtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKXtcclxuICAgIHN1cGVyIChwb3B1cFNlbGVjdG9yKVxyXG4gIH1cclxuICBvcGVuKGVsZW1lbnQpIHtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICAgIFBvcHVwV2l0aEltYWdlLmZ1bGxTY3Jpbi5zcmMgPSBlbGVtZW50Lmxpbms7XHJcbiAgICBQb3B1cFdpdGhJbWFnZS5mdWxsU2NyaW4uYWx0ID0gZWxlbWVudC5uYW1lO1xyXG4gICAgUG9wdXBXaXRoSW1hZ2UuZnVsbFNjcmluVGl0bGUudGV4dENvbnRlbnQgPSBlbGVtZW50Lm5hbWU7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yIChwb3B1cFNlbGVjdG9yLCBoZW5kbGVGb3JtQ2FsbEJhY2spIHtcclxuICAgICAgICBzdXBlciAocG9wdXBTZWxlY3RvcilcclxuICAgICAgICB0aGlzLl9oZW5kbGVGb3JtQ2FsbEJhY2sgPSBoZW5kbGVGb3JtQ2FsbEJhY2s7XHJcbiAgICAgICAgdGhpcy5fdGV4dEJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5zdWJtaXQtYnV0dG9uJyk7XHJcbiAgICAgICAgdGhpcy5fdGV4dEJ1dHRvbkRlZmF1bHQgPSB0aGlzLl90ZXh0QnV0dG9uLnRleHRDb250ZW50O1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLmZvcm0nKTtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb3JtX19pbnB1dCcpKVxyXG4gICAgfVxyXG4gICAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgICAgIHRoaXMudmFsdWVMaXN0ID0ge307XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGVsKSA9PntcclxuICAgICAgICAgICAgdGhpcy52YWx1ZUxpc3RbZWwubmFtZV0gPSBlbC52YWx1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlTGlzdDtcclxuICAgIH1cclxuICAgIHNob3dMb2FkaW5nTWVzc2FnZShpc0xvYWRpbmcpIHtcclxuICAgICAgICBpZihpc0xvYWRpbmcpe1xyXG4gICAgICAgICAgdGhpcy5fdGV4dEJ1dHRvbi5pbm5lclRleHQgPSBcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCI7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICB0aGlzLl90ZXh0QnV0dG9uLmlubmVyVGV4dCA9IHRoaXMuX3RleHRCdXR0b25EZWZhdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKXtcclxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9nZXRJbnB1dFZhbHVlcygpXHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmdNZXNzYWdlKHRydWUpO1xyXG4gICAgICAgICAgICB0aGlzLl9oZW5kbGVGb3JtQ2FsbEJhY2soZGF0YSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50LnJlc2V0KCk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgICBzdGF0aWMgYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpXHJcblxyXG4gICAgY29uc3RydWN0b3Iobmlja05hbWVTZWxlY3RvciwgYWJvdXRNZVNlbGVjdG9yKXtcclxuICAgICAgICB0aGlzLl9uaWNrTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Iobmlja05hbWVTZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5fYWJvdXRNZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWJvdXRNZVNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl91c2VySW5mbyA9IHt9XHJcbiAgICB9XHJcblxyXG4gICAgc2V0VXNlckluZm8oZGF0YSkge1xyXG4gICAgICAgIHRoaXMuX25pY2tOYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xyXG4gICAgICAgIHRoaXMuX2Fib3V0TWUudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xyXG4gICAgICAgIFVzZXJJbmZvLmF2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcclxuICAgICAgICB0aGlzLl91c2VySW5mbyA9IGRhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VXNlckluZm8gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl91c2VySW5mbztcclxuICAgIH1cclxuICAgIGdldElkVXNlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdXNlckluZm8uX2lkO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cERlbGV0ZSBleHRlbmRzIFBvcHVwIHtcclxuICAgIGNvbnN0cnVjdG9yIChwb3B1cFNlbGVjdG9yLCBoYW5kbGVEZWxldGVDYXJkKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3RvcilcclxuICAgICAgICB0aGlzLl9kYXRhQ2FyZCA9e31cclxuICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkID0gaGFuZGxlRGVsZXRlQ2FyZDtcclxuICAgICAgICB0aGlzLl90ZXh0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnN1Ym1pdC1idXR0b24nKTtcclxuICAgICAgICB0aGlzLl90ZXh0QnV0dG9uRGVmYXVsdCA9IHRoaXMuX3RleHRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgICAgICAgdGhpcy5fY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlLWJ1dHRvbicpO1xyXG4gICAgICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLmZvcm0nKTtcclxuICAgICAgfVxyXG4gICAgICBvcGVuKGRhdGEpe1xyXG4gICAgICAgIHRoaXMuX2RhdGFDYXJkID0ge2lkOiBkYXRhLmlkLCBjbG9uZUNhcmQ6IGRhdGEuY2xvbmVDYXJkfTtcclxuICAgICAgICBzdXBlci5vcGVuKCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGFDYXJkO1xyXG4gICAgICB9XHJcbiAgICAgIGRlbGV0ZUNhcmQgID0gKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2RhdGFDYXJkLmNsb25lQ2FyZC5yZW1vdmUoKTtcclxuICAgICAgICB0aGlzLl9kYXRhQ2FyZC5jbG9uZUNhcmQgPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICAgIHNob3dMb2FkaW5nTWVzc2FnZShpc0xvYWRpbmcpIHtcclxuICAgICAgICBpZihpc0xvYWRpbmcpe1xyXG4gICAgICAgICAgdGhpcy5fdGV4dEJ1dHRvbi5pbm5lclRleHQgPSBcItCj0LTQsNC70LXQvdC40LUuLi5cIjtcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgIHRoaXMuX3RleHRCdXR0b24uaW5uZXJUZXh0ID0gdGhpcy5fdGV4dEJ1dHRvbkRlZmF1bHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHNldEV2ZW50TGlzdGVuZXJzKCl7XHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLl9mb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZXZ0KSA9PiB7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nTWVzc2FnZSh0cnVlKTtcclxuICAgICAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzLl9kYXRhQ2FyZC5pZClcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG59IiwiZXhwb3J0IGNvbnN0IGxpc3RTZWxlY3RvciA9IHtcclxuICBpbnB1dFNlbGVjdG9yOiAnLmZvcm1fX2lucHV0JyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5zdWJtaXQtYnV0dG9uJyxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAnZm9ybV9fc3VibWl0X2luYWN0aXZlJyxcclxuICBpbnB1dEVycm9yQ2xhc3M6ICdmb3JtX19pbnB1dF90eXBlX2Vycm9yJyxcclxufTtcclxuZXhwb3J0IGNvbnN0IHRlbXBsYXRlQ2FyZFNlbGVjdG9yID0gJyN0ZW1wbGF0ZS3RgWFyZCc7XHJcblxyXG5leHBvcnQgY29uc3QgcG9wdXBBdmF0YXJTZWxlY3RvciA9ICcjYXZhdGFyJztcclxuZXhwb3J0IGNvbnN0IHBvcHVwUHJvZmlsZVNlbGVjdG9yID0gJyNwcm9maWxlJztcclxuZXhwb3J0IGNvbnN0IHBvcHVwQ3JlYXRlQ2FyZFNlbGVjdG9yID0gJyNjcmVhdGUtY2FyZCc7XHJcbmV4cG9ydCBjb25zdCBwb3B1cERlbGV0ZUNhcmRTZWxlY3RvciA9ICcjZGVsZXRlLWNhcmQnO1xyXG5leHBvcnQgY29uc3QgcG9wdXBGdWxsU2NyZWVuU2VsZWN0b3IgPSAnLnBvcHVwX3R5cGVfbWF4LWltZyc7XHJcblxyXG5leHBvcnQgY29uc3QgYWJvdXRNZVNlbGVjdG9yID0gJy5wcm9maWxlX19wcm9mZXNzaW9uJztcclxuZXhwb3J0IGNvbnN0IG5pY2tOYW1lU2VsZWN0b3IgPSAnLnByb2ZpbGVfX25pY2stbmFtZSc7XHJcblxyXG5leHBvcnQgY29uc3QgYXZhdGFySW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXZhdGFyLWlucHV0Jyk7XHJcbmV4cG9ydCBjb25zdCBhYm91dE1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWJvdXQtaW5wdXQnKTtcclxuZXhwb3J0IGNvbnN0IG5pY2tOYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmFtZS1pbnB1dCcpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJ1dHRvbkFkZENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLXBob3RvJyk7XHJcbmV4cG9ydCBjb25zdCBidXR0b25DaGFuZ2VBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1hdmF0YXInKTtcclxuZXhwb3J0IGNvbnN0IGJ1dHRvblByb2ZpbGVFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBmb3JtQ3JlYXRlQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmb3JtLWNyZWF0ZScpO1xyXG5leHBvcnQgY29uc3QgZm9ybVByb2ZpbGVFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2ZpbGUtZWRpdCcpO1xyXG5leHBvcnQgY29uc3QgZm9ybUNoYW5nZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjaGVuZy1hdmF0YXInKVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhcmRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NhcmQtbGlzdCcpOyIsImltcG9ydCAnLi9pbmRleC5jc3MnO1xyXG5pbXBvcnQgQXBpIGZyb20gJy4uL3NjcmlwdHMvY29tcG9uZW50cy9BcGkuanMnO1xyXG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9zY3JpcHRzL2NvbXBvbmVudHMvQ2FyZC5qcyc7XHJcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL3NjcmlwdHMvY29tcG9uZW50cy9TZWN0aW9uLmpzJztcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vc2NyaXB0cy9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcclxuaW1wb3J0IFBvcHVwRGVsZXRlIGZyb20gJy4uL3NjcmlwdHMvY29tcG9uZW50cy9Qb3B1cERlbGV0ZS5qcyc7XHJcbmltcG9ydCB7XHJcbiAgdGVtcGxhdGVDYXJkU2VsZWN0b3IsXHJcblxyXG4gIGxpc3RTZWxlY3RvcixcclxuICBidXR0b25BZGRDYXJkLFxyXG4gIGJ1dHRvbkNoYW5nZUF2YXRhcixcclxuICBidXR0b25Qcm9maWxlRWRpdCxcclxuXHJcbiAgcG9wdXBBdmF0YXJTZWxlY3RvcixcclxuICBwb3B1cFByb2ZpbGVTZWxlY3RvcixcclxuICBwb3B1cERlbGV0ZUNhcmRTZWxlY3RvcixcclxuICBwb3B1cENyZWF0ZUNhcmRTZWxlY3RvcixcclxuICBwb3B1cEZ1bGxTY3JlZW5TZWxlY3RvcixcclxuXHJcbiAgZm9ybUNyZWF0ZUNhcmQsXHJcbiAgZm9ybVByb2ZpbGVFZGl0LFxyXG4gIGZvcm1DaGFuZ2VBdmF0YXIsXHJcblxyXG4gIGNhcmRMaXN0LFxyXG5cclxuICBhYm91dE1lU2VsZWN0b3IsXHJcbiAgbmlja05hbWVTZWxlY3RvcixcclxuXHJcbiAgYXZhdGFySW5wdXQsXHJcbiAgYWJvdXRNZUlucHV0LFxyXG4gIG5pY2tOYW1lSW5wdXQsXHJcbn0gZnJvbSAnLi4vc2NyaXB0cy9jb25zdGFudHMvY29uc3RhbnRzLmpzJztcclxuXHJcbmNvbnN0IGNyZWF0ZUVsQ2FyZCA9IChkYXRhKSA9PiB7XHJcbiAgY29uc3QgaWRVc2VyID0gdXNlckluZm8uZ2V0SWRVc2VyKCk7XHJcbiAgY29uc3QgbmV3Q2FyZCA9IG5ldyBDYXJkIChcclxuICAgIHRlbXBsYXRlQ2FyZFNlbGVjdG9yLFxyXG4gICAgZGF0YSxcclxuICAgIGlkVXNlcixcclxuICAgICgpID0+IHBvcHVwV2l0aEltYWdlLm9wZW4oZGF0YSksLy9oYW5kbGVDYXJkQ2xpY2tcclxuICAgIChkYXRhKSA9PiB7XHJcbiAgICAgIGFwaS5saWtlQ2FyZChkYXRhKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIG5ld0NhcmQuY2hhbmdlRGF0YUxpa2VDb3VudGVyKHJlcyk7XHJcbiAgICAgICAgbmV3Q2FyZC5jaGVja0xpa2VDb3VudGVyKHJlcyk7XHJcbiAgICAgICAgbmV3Q2FyZC50b2dnbGVMaWtlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKVxyXG4gICAgfSwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2hhbmRsZUxpa2VBY3RpdmVcclxuICAgIChkYXRhKSA9PiB7XHJcbiAgICAgIGFwaS5kZWxldGVMaWtlKGRhdGEpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBuZXdDYXJkLmNoYW5nZURhdGFMaWtlQ291bnRlcihyZXMpO1xyXG4gICAgICAgIG5ld0NhcmQuY2hlY2tMaWtlQ291bnRlcihyZXMpO1xyXG4gICAgICAgIG5ld0NhcmQudG9nZ2xlTGlrZSgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgIH0sICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9oYW5kbGVMaWtlRGVsZXRlXHJcbiAgICAoZGF0YSkgPT4geyBcclxuICAgICAgcG9wdXBEZWxldGUub3BlbihkYXRhKSBcclxuICAgIH0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9oYW5kbGVEZWxldGVDYXJkXHJcbiAgKTtcclxuICBjb25zdCBjYXJkRWxlbWVudCA9IG5ld0NhcmQuY3JlYXRlQ2FyZCgpO1xyXG4gIHJldHVybiBjYXJkRWxlbWVudFxyXG59O1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSAoe1xyXG4gIHVybDogJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDEnLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246ICc5ZjkzMmJiYy1hY2Q3LTRkYWUtODI0OS1jOTg1NTI2NTlmNTYnLFxyXG4gICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICB9XHJcbn0pO1xyXG5cclxuY29uc3Qgc2VjdGlvbiA9IG5ldyBTZWN0aW9uICgoZWwpID0+IHNlY3Rpb24uYXBwZW5kSXRlbXMoY3JlYXRlRWxDYXJkKGVsKSksIGNhcmRMaXN0KTtcclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8obmlja05hbWVTZWxlY3RvciwgYWJvdXRNZVNlbGVjdG9yKTtcclxuY29uc3QgcG9wdXBEZWxldGUgPSBuZXcgUG9wdXBEZWxldGUgKHBvcHVwRGVsZXRlQ2FyZFNlbGVjdG9yLFxyXG4gIChpZCkgPT4ge1xyXG4gIGFwaS5kZWxldGVDYXJkKGlkKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgcG9wdXBEZWxldGUuZGVsZXRlQ2FyZCgpXHJcbiAgICBzZWN0aW9uLnNldEl0ZW1zKHJlcylcclxuICAgIHBvcHVwRGVsZXRlLmNsb3NlKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAuZmluYWxseSgoKSA9PiBwb3B1cERlbGV0ZS5zaG93TG9hZGluZ01lc3NhZ2UoZmFsc2UpKVxyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwV2l0aEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlIChwb3B1cEZ1bGxTY3JlZW5TZWxlY3Rvcik7XHJcbmNvbnN0IGF2YXRhclZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGxpc3RTZWxlY3RvciwgZm9ybUNoYW5nZUF2YXRhcik7XHJcbmNvbnN0IHByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvciAobGlzdFNlbGVjdG9yLGZvcm1Qcm9maWxlRWRpdCk7XHJcbmNvbnN0IGNyZWF0ZUNhcmRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvciAobGlzdFNlbGVjdG9yLGZvcm1DcmVhdGVDYXJkKTtcclxuXHJcbmNvbnN0IHBvcHVwV2l0aFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybSAocG9wdXBQcm9maWxlU2VsZWN0b3IsXHJcbiAgKGRhdGEpID0+IHtcclxuICBhcGkucGF0Y2hEYXRhVXNlcihkYXRhKVxyXG4gIC50aGVuKChyZXMpID0+IHtcclxuICAgIHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhyZXMpO1xyXG4gICAgcG9wdXBXaXRoUHJvZmlsZS5jbG9zZSgpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXHJcbiAgLmZpbmFsbHkoKCkgPT4gcG9wdXBXaXRoUHJvZmlsZS5zaG93TG9hZGluZ01lc3NhZ2UoZmFsc2UpKVxyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwV2l0aENyZWF0ZUNhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybSAocG9wdXBDcmVhdGVDYXJkU2VsZWN0b3IsXHJcbiAgKGRhdGEpID0+IHtcclxuICBhcGkucG9zdE5ld0NhcmQoZGF0YSlcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBzZWN0aW9uLnByZXBlbmRJdGVtcyhjcmVhdGVFbENhcmQocmVzKSlcclxuICAgIHBvcHVwV2l0aENyZWF0ZUNhcmQuY2xvc2UoKVxyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpXHJcbiAgLmZpbmFsbHkoKCkgPT4gcG9wdXBXaXRoQ3JlYXRlQ2FyZC5zaG93TG9hZGluZ01lc3NhZ2UoZmFsc2UpKVxyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwQ2hhbmdlQXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0gKHBvcHVwQXZhdGFyU2VsZWN0b3IsXHJcbiAgKGRhdGEpID0+IHtcclxuICBhcGkucGF0Y2hBdmF0YXJVc2VyKGRhdGEpXHJcbiAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHJlcyk7XHJcbiAgICBwb3B1cENoYW5nZUF2YXRhci5jbG9zZSgpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycilcclxuICB9KVxyXG4gIC5maW5hbGx5KCgpID0+IHBvcHVwQ2hhbmdlQXZhdGFyLnNob3dMb2FkaW5nTWVzc2FnZShmYWxzZSkpXHJcbn0pO1xyXG5cclxuYXZhdGFyVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxucHJvZmlsZVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmNyZWF0ZUNhcmRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuYnV0dG9uQWRkQ2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCkgPT4ge1xyXG4gIHBvcHVwV2l0aENyZWF0ZUNhcmQub3BlbigpO1xyXG4gIGNyZWF0ZUNhcmRWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5idXR0b25Qcm9maWxlRWRpdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCkgPT4ge1xyXG4gIGNvbnN0IGRhdGEgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xyXG4gIG5pY2tOYW1lSW5wdXQudmFsdWUgPSBkYXRhLm5hbWU7XHJcbiAgYWJvdXRNZUlucHV0LnZhbHVlID0gZGF0YS5hYm91dDtcclxuICBwb3B1cFdpdGhQcm9maWxlLm9wZW4oKTtcclxuICBwcm9maWxlVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG59KTtcclxuYnV0dG9uQ2hhbmdlQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKSA9PiB7XHJcbiAgcG9wdXBDaGFuZ2VBdmF0YXIub3BlbigpO1xyXG4gIGF2YXRhclZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG5wb3B1cERlbGV0ZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5wb3B1cFdpdGhJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5wb3B1cFdpdGhQcm9maWxlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwQ2hhbmdlQXZhdGFyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwV2l0aENyZWF0ZUNhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmFwaS5nZXRBbGxEYXRhKClcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBjb25zdCBbZGF0YUNhcmQsIGRhdGFVc2VyXSA9IHJlcztcclxuICAgIHNlY3Rpb24uc2V0SXRlbXMoZGF0YUNhcmQpO1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YVVzZXIpO1xyXG4gICAgc2VjdGlvbi5yZW5kZXJJdGVtcygpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycilcclxuICB9KTsiXSwibmFtZXMiOlsiQXBpIiwiY29uZmlnIiwidGhpcyIsIl91cmwiLCJ1cmwiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0IiwiZmV0Y2giLCJtZXRob2QiLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJhbGwiLCJfZ2V0QWxsQ2FyZCIsIl9nZXRVc2VyRGF0YSIsImRhdGEiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJhYm91dCIsImF2YXRhciIsImlkIiwiX2lkIiwiQ2FyZCIsInRlbXBsYXRlQ2FyZFNlbGVjdG9yIiwiaWRVc2VyIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUFjdGl2ZSIsImhhbmRsZUxpa2VEZWxldGUiLCJoYW5kbGVEZWxldGVDYXJkIiwiX2RhdGEiLCJfaWRVc2VyIiwiX2hhbmRsZUNhcmRDbGljayIsIl9oYW5kbGVMaWtlQWN0aXZlIiwiX2hhbmRsZUxpa2VEZWxldGUiLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9jbG9uZUNhcmQiLCJfZ2V0Q2xvbmVDYXJkIiwiX3BsYXNlSW1nIiwicXVlcnlTZWxlY3RvciIsIl9saWtlQnV0dG9uIiwiX3BsYWNlVGl0bGUiLCJfY2FyZExpa2VDb3VudGVyIiwiX2RlbGV0ZUJ1dHRvbiIsInNlbGVjdG9yIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwibGlrZXMiLCJzb21lIiwiZWwiLCJfaXNMaWtlZCIsIl9hZGRsaWtlIiwidGV4dENvbnRlbnQiLCJsZW5ndGgiLCJvd25lciIsImNsYXNzTGlzdCIsImFkZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbG9uZUNhcmQiLCJzcmMiLCJsaW5rIiwiYWx0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX3NldExpa2VTdGF0dXMiLCJjaGVja0xpa2VDb3VudGVyIiwidG9nZ2xlIiwiU2VjdGlvbiIsInJlbmRlcmVyIiwiY29udGFpbmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImZvckVhY2giLCJwcmVwZW5kIiwiYXBwZW5kIiwiRm9ybVZhbGlkYXRvciIsImxpc3RTZWxlY3RvciIsImZvcm1FbGVtZW50IiwiX2hhc0ludmFsaWRJbnB1dCIsIl9kaXNhYmxlU3VibWl0QnV0dG9uIiwiX2VuYWJsZVN1Ym1pdEJ1dHRvbiIsIl90b2dnbGVCdXR0b25TdGF0ZSIsIl9pbnB1dExpc3QiLCJpbnB1dEVsZW1lbnQiLCJfaGlkZUlucHV0RXJyb3IiLCJfbGlzdFNlbGVjdG9yIiwiX2Zvcm1FbGVtZW50IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJlcnJvck1hc2FnZSIsIl9pbnB1dEVycm9yIiwiaW5wdXRFcnJvckNsYXNzIiwicmVtb3ZlIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsIl9pc1ZhbGlkIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJ0YXJnZXQiLCJjbG9zZXN0IiwiY2xvc2UiLCJrZXkiLCJfcG9wdXAiLCJfY2xvc2VCdXR0b24iLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX2Nsb3NlQnlDbGljayIsIlBvcHVwV2l0aEltYWdlIiwiZWxlbWVudCIsImZ1bGxTY3JpbiIsImZ1bGxTY3JpblRpdGxlIiwiUG9wdXBXaXRoRm9ybSIsImhlbmRsZUZvcm1DYWxsQmFjayIsIl9oZW5kbGVGb3JtQ2FsbEJhY2siLCJfdGV4dEJ1dHRvbiIsIl90ZXh0QnV0dG9uRGVmYXVsdCIsInZhbHVlTGlzdCIsInZhbHVlIiwiaXNMb2FkaW5nIiwiaW5uZXJUZXh0IiwiX2dldElucHV0VmFsdWVzIiwic2hvd0xvYWRpbmdNZXNzYWdlIiwicmVzZXQiLCJVc2VySW5mbyIsIm5pY2tOYW1lU2VsZWN0b3IiLCJhYm91dE1lU2VsZWN0b3IiLCJfbmlja05hbWUiLCJfYWJvdXRNZSIsIl91c2VySW5mbyIsIlBvcHVwRGVsZXRlIiwiX2RhdGFDYXJkIiwiYWJvdXRNZUlucHV0Iiwibmlja05hbWVJbnB1dCIsImJ1dHRvbkFkZENhcmQiLCJidXR0b25DaGFuZ2VBdmF0YXIiLCJidXR0b25Qcm9maWxlRWRpdCIsImZvcm1DcmVhdGVDYXJkIiwiZm9ybVByb2ZpbGVFZGl0IiwiZm9ybUNoYW5nZUF2YXRhciIsImNhcmRMaXN0IiwiY3JlYXRlRWxDYXJkIiwidXNlckluZm8iLCJnZXRJZFVzZXIiLCJuZXdDYXJkIiwicG9wdXBXaXRoSW1hZ2UiLCJvcGVuIiwiYXBpIiwibGlrZUNhcmQiLCJjaGFuZ2VEYXRhTGlrZUNvdW50ZXIiLCJ0b2dnbGVMaWtlIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwiZGVsZXRlTGlrZSIsInBvcHVwRGVsZXRlIiwiY3JlYXRlQ2FyZCIsImF1dGhvcml6YXRpb24iLCJzZWN0aW9uIiwiYXBwZW5kSXRlbXMiLCJkZWxldGVDYXJkIiwic2V0SXRlbXMiLCJmaW5hbGx5IiwiYXZhdGFyVmFsaWRhdG9yIiwicHJvZmlsZVZhbGlkYXRvciIsImNyZWF0ZUNhcmRWYWxpZGF0b3IiLCJwb3B1cFdpdGhQcm9maWxlIiwicGF0Y2hEYXRhVXNlciIsImdldFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJwb3B1cFdpdGhDcmVhdGVDYXJkIiwicG9zdE5ld0NhcmQiLCJwcmVwZW5kSXRlbXMiLCJwb3B1cENoYW5nZUF2YXRhciIsInBhdGNoQXZhdGFyVXNlciIsImVuYWJsZVZhbGlkYXRpb24iLCJyZXNldFZhbGlkYXRpb24iLCJzZXRFdmVudExpc3RlbmVycyIsImdldEFsbERhdGEiLCJkYXRhQ2FyZCIsImRhdGFVc2VyIiwicmVuZGVySXRlbXMiXSwic291cmNlUm9vdCI6IiJ9